solver_options: 
  library: scipy
  method: slsqp
  derivative_method: 2-point 
  derivative_abs_step: 1e-5 
  print_convergence: True 
  plot_convergence: False
  logger: None
  update_on: gradient
  options: 
    tolerance: 1e-5 
    max_iterations: 200
  callbacks:
    save_cycle: True
    save_config: True
    plot_cycle: True
    plot_convergence: False


problem_formulation:

  cycle_topology: simple

  plot_settings:
    pinch_point_diagram: False
    fluid: 
      plot_saturation_line: True
      plot_critical_point: True
      plot_quality_isolines: True
      plot_pseudocritical_line: False
      plot_triple_point_liquid: False
      plot_triple_point_vapor: False
    diagrams:
      - x_prop: s
        y_prop: T
        x_scale: linear
        y_scale: linear

  fixed_parameters:

    working_fluid:
      name: water
      backend: HEOS
      exceptions: True

    heating_fluid:
        name: nitrogen
        backend: HEOS
        exceptions: True

    cooling_fluid:
      name: water
      backend: HEOS
      exceptions: True

    net_power: 1e6
    
    # Second law analysis not implemented yet
    # ambient_temperature: 300
    # ambient_pressure: 101325

    heat_source:
      inlet_temperature: 400 + 273.15
      exit_temperature_max: 390 + 273.15
      exit_temperature_min: 200 + 273.15
      inlet_pressure: 101325
      exit_pressure: 101325

    heat_sink:
      inlet_temperature: 20 + 273.15
      exit_temperature_min: 30 + 273.15
      exit_temperature_max: 40 + 273.15
      inlet_pressure: 101325
      exit_pressure: 101325

    heater:
      pressure_drop_hot_side: 0.00
      pressure_drop_cold_side: 0.00
      num_elements: 50

    cooler:
      pressure_drop_hot_side: 0.00
      pressure_drop_cold_side: 0.00
      num_elements: 50

    expander:
      efficiency: 0.9
      efficiency_type: "isentropic"

    compressor:
      efficiency: 0.9
      efficiency_type: "isentropic"

    heat_source_pump:
      efficiency: 1
      efficiency_type: "isentropic"

    heat_sink_pump:
      efficiency: 1
      efficiency_type: "isentropic"

  # Problem scale affects the optimization convergence. Values above one lead to smaller line search step sizes and more conservative convergence (recommended)
  design_variables_scale: 10  

  design_variables:
    heat_source_exit_temperature:
      min: $heat_source.exit_temperature_min
      max: $heat_source.exit_temperature_max
      value: $heat_source.exit_temperature_min + 0.30*($heat_source.exit_temperature_max - $heat_source.exit_temperature_min)
    
    heat_sink_exit_temperature:
      min: $heat_sink.exit_temperature_min
      max: $heat_sink.exit_temperature_max
      value: $heat_sink.exit_temperature_min + 0.32*($heat_sink.exit_temperature_max - $heat_sink.exit_temperature_min)
    
    compressor_inlet_pressure:
      min: 0.9*$working_fluid.liquid_at_heat_sink_temperature.p
      max: 5.0*$working_fluid.liquid_at_heat_sink_temperature.p
      value: 0.9*$working_fluid.liquid_at_heat_sink_temperature.p

    compressor_inlet_enthalpy:
      min: 0.5*$working_fluid.liquid_at_heat_sink_temperature.h
      max: 1.5*$working_fluid.liquid_at_heat_sink_temperature.h
      value: 0.9*$working_fluid.liquid_at_heat_sink_temperature.h

    expander_inlet_pressure:
      min: 0.01*$working_fluid.critical_point.p
      max: 1.00*$working_fluid.critical_point.p
      value: 0.05*$working_fluid.critical_point.p

    expander_inlet_enthalpy:
      min: 0.20*$working_fluid.gas_at_heat_source_temperature.h
      max: 1.00*$working_fluid.gas_at_heat_source_temperature.h
      value: 0.9*$working_fluid.gas_at_heat_source_temperature.h


  constraints:
    - variable: $components.heater.temperature_difference
      type: ">"
      value: 10
      normalize: True

    - variable: $components.cooler.temperature_difference
      type: ">"
      value: 10
      normalize: True

    - variable: $components.compressor.state_in.subcooling
      type: ">"
      value: 5
      normalize: True

    - variable: $components.expander.state_out.Q
      type: ">"
      value: 0.95
      normalize: True

  objective_function:
    variable: $energy_analysis.system_efficiency
    type: maximize




